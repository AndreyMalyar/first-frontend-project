Index: style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import \"./fonts/Helvetica-Neue/stylesheet.css\";\r\n\r\n/* ---------- style globs ---------- */\r\n:root{\r\n    --color-black: #000;\r\n    --color-white: #fff;\r\n    --color-firebrick: firebrick;\r\n}\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\nbody{\r\n    background-color: beige;\r\n    font-family: \"Helvetica Neue\", sans-serif;\r\n    font-size: 18px;\r\n    font-weight: 400;\r\n}\r\n.container{\r\n    width: 100%;\r\n    max-width: 1140px;\r\n    margin: 0 auto;\r\n    padding: 0 15px;\r\n}\r\n\r\n.indent{\r\n    margin: 30px 0 15px 0;\r\n}\r\n.topIndent{\r\n    margin-top: 15px;\r\n}\r\n.leftIndent{\r\n    margin-left: 20px;\r\n}\r\n\r\n/* ---------- style globs section ---------- */\r\n.section-title{\r\n    margin-top: 20px;\r\n    color: var(--color-firebrick);\r\n    text-align: center;\r\n}\r\n\r\n/* ---------- style section basicsGit ---------- */\r\n.basicsGit__links{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    gap: 10px;\r\n}\r\n.myBtn{\r\n    display: inline-block;\r\n    padding: 5px 10px;\r\n    background: var(--color-firebrick);\r\n    color: var(--color-white);\r\n    border-radius: 8px;\r\n    outline: none;\r\n    border: none;\r\n}\r\n.myBtn a{\r\n    display: block;\r\n    text-decoration: none;\r\n    color: #fff;\r\n}\r\n\r\n/* ---------- style section basicsGit таблица ---------- */\r\n.table-git{\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin: 15px auto;\r\n}\r\n.table-git th, td{\r\n    border: 1px solid var(--color-black);\r\n    padding: 5px 10px;\r\n}\r\n.table-git th{\r\n    text-align: center;\r\n    background-color: var(--color-firebrick);\r\n    color: var(--color-white);\r\n}\r\n.table-git tbody td:first-child{\r\n    text-align: center;\r\n    font-weight: 600;\r\n    /* перенос слов */\r\n    white-space: nowrap;\r\n}\r\n.table-git tfoot td{\r\n    color: var(--color-firebrick);\r\n    font-size: 16px;\r\n}\r\n\r\n/* code в section basicsGit */\r\n.code{\r\n    display: block;\r\n    padding: 20px;\r\n    background-color: var(--color-black);\r\n    color: var(--color-white);\r\n    margin: 10px 0;\r\n}\r\n.code__text{\r\n    font-size: 14px;\r\n    margin-top: 10px;\r\n}\r\n\r\n/* ---------- style section basicsGit tabs ---------- */\r\n.tabs{\r\n    margin-top: 20px;\r\n}\r\n.tabs-triggers{\r\n    display: flex;\r\n}\r\n.tabs-trigger__item{\r\n    display: block;\r\n    text-decoration: none;\r\n    color: var(--color-black);\r\n    text-align: center;\r\n    padding: 8px 15px;\r\n    flex-grow: 1;\r\n    border: 1px solid var(--color-black);\r\n    font-size: 16px;\r\n}\r\n.tabs-trigger__item_active{\r\n    background-color: var(--color-firebrick);\r\n    color: var(--color-white);\r\n}\r\n.tabs-content__item{\r\n    display: none;\r\n    padding-top: 20px;\r\n}\r\n.tabs-content__item_active{\r\n    display: block;\r\n}\r\n\r\n/* ---------- section stateGit ---------- */\r\n/* section stateGit (состояние в Git) */\r\n.stateGit{\r\n    width: 100%;\r\n    position: relative;\r\n}\r\n.stateGit__wrap{\r\n    width: 100%;\r\n    background-color: var(--color-firebrick);\r\n    position: sticky;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n}\r\n.stateGit__container{\r\n    margin-top: 20px;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n    background-color: var(--color-firebrick);\r\n    color: var(--color-white);\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n.stateGit__container::before{\r\n    content: '!';\r\n    position: absolute;\r\n    bottom: -10px;\r\n    right: -10px;\r\n    font-weight: 600;\r\n    font-size: 150px;\r\n    line-height: 100px;\r\n    opacity: 0.5;\r\n    overflow: hidden;\r\n    font-family: serif;\r\n}\r\n.stateGit__text{\r\n    margin: 10px 0;\r\n}\r\n.stateGit__list{\r\n    margin-left: 20px;\r\n}\r\n/* End состояние в Git */\r\n\r\n.title-chapter{\r\n    margin: 20px 10px;\r\n    padding-left: 25px;\r\n    position: relative;\r\n}\r\n.title-chapter::before{\r\n    content: '\\2714';\r\n    width: 20px;\r\n    height: 20px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translateY(-50%);\r\n    background-color: firebrick;\r\n    color: #fff;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.title-chapter a{\r\n    text-decoration: none;\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    color: #000;\r\n}\r\n\r\n/* ---------- top-btn ---------- */\r\n.top-btn{\r\n    position: fixed;\r\n    bottom: 50px;\r\n    right: 50px;\r\n    z-index: 20;\r\n    background-color: var(--color-firebrick);\r\n    width: 50px;\r\n    height: 50px;\r\n    color: var(--color-white);\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n    line-height: 100%;\r\n\r\n    display: none;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 50%;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n}\r\n/* ---------- End top-btn ---------- */\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/style.css b/style.css
--- a/style.css	(revision 9be311ae7be1d422aa987881c3600b7a60ad97e5)
+++ b/style.css	(date 1730811465988)
@@ -2,14 +2,13 @@
 
 /* ---------- style globs ---------- */
 :root{
-    --color-black: #000;
-    --color-white: #fff;
-    --color-firebrick: firebrick;
-}
-*{
     margin: 0;
     padding: 0;
     box-sizing: border-box;
+
+    --color-black: #000;
+    --color-white: #fff;
+    --color-firebrick: firebrick;
 }
 body{
     background-color: beige;
Index: index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>First frontend Project</title>\r\n    <link rel=\"stylesheet\" href=\"./style.css\">\r\n    <script src=\"./script.js\" defer></script>\r\n</head>\r\n<body>\r\n\r\n<main>\r\n    <!--section basicsGit-->\r\n    <section class=\"basicsGit\">\r\n        <h2 class=\"section-title\">Основы работы с Git</h2>\r\n        <div class=\"basicsGit__links\">\r\n            <button class=\"myBtn\"><a href=\"https://git-scm.com/downloads\" target=\"_blank\">Установка Git</a></button>\r\n            <button class=\"myBtn\"><a href=\"https://github.com\" target=\"_blank\">Репозиторий</a></button>\r\n        </div>\r\n        <div class=\"container\">\r\n            <!-- basicsGit tabs -->\r\n            <div class=\"tabs\">\r\n                <div class=\"tabs-triggers\">\r\n                    <a href=\"#tab-1\" class=\"tabs-trigger__item tabs-trigger__item_active\">Что такое Git и зачем он нужен</a>\r\n                    <a href=\"#tab-2\" class=\"tabs-trigger__item\">Три места хранения кода</a>\r\n                    <a href=\"#tab-3\" class=\"tabs-trigger__item\">Основные команды Git</a>\r\n                    <a href=\"#tab-4\" class=\"tabs-trigger__item\">Настройка Git</a>\r\n                </div>\r\n                <div class=\"tabs-content\">\r\n                    <div id=\"tab-1\" class=\"tabs-content__item tabs-content__item_active\">\r\n                        <p><b>Git — это мощная система управления версиями</b>, используемая для отслеживания изменений в исходном коде во время разработки программного обеспечения. Она позволяет разработчикам сохранять различные версии файлов и координировать работу нескольких людей над общим проектом.</p>\r\n\r\n                        <ul class=\"topIndent leftIndent\">\r\n                            <li><b>Отслеживать изменения в файлах:</b> фиксировать каждое изменение в отдельной версии.</li>\r\n                            <li><b>Хранить историю изменений:</b> сохранять все предыдущие версии файлов.</li>\r\n                            <li><b>Создавать ветки:</b> работать над разными версиями кода параллельно.</li>\r\n                            <li><b>Объединять ветки:</b> объединять изменения из разных веток</li>\r\n                            <li><b>Откатываться к предыдущим версиям:</b> возвращаться к любой сохраненной версии.</li>\r\n                        </ul>\r\n\r\n                        <p class=\"topIndent\"><b>Основные понятия Git:</b></p>\r\n                        <p class=\"leftIndent topIndent\"><b>Репозиторий (или \"repo\")</b> – это место, где хранится вся история проекта, включая все изменения и версии файлов. В Git репозиторий включает рабочую директорию, индекс (или стадию) и базу данных объектов.</p>\r\n                        <p class=\"leftIndent topIndent\"><b>Коммит (commit)</b> – это сохраненное состояние проекта. Каждый коммит в Git содержит информацию о том, какие изменения были внесены в проект, кем и когда. Коммиты образуют историю проекта и позволяют вернуться к любой предыдущей версии.</p>\r\n                        <p class=\"leftIndent topIndent\"><b>Ветвь (branch)</b> — это независимая линия разработки. По умолчанию Git создает ветку main (ранее master). Вы можете создавать новые ветви для разработки новых фич или исправлений, а затем объединять их обратно в основную ветвь.</p>\r\n                        <p class=\"leftIndent topIndent\"><b>Слияние (merge)</b> и <b>ребейз (rebase)</b> — это два способа интеграции изменений из одной ветви в другую. Слияние объединяет истории двух ветвей, создавая новый коммит, а ребейз переносит коммиты одной ветви на вершину другой, изменяя историю коммитов.</p>\r\n                    </div>\r\n                    <div id=\"tab-2\" class=\"tabs-content__item\">\r\n                        <p>Когда вы будете пользоваться системой контроля версий для вашего кода, ваш код, грубо говоря, будет храниться в трех местах:</p>\r\n\r\n                        <p class=\"topIndent\"><b>1. Удаленный репозиторий:</b></p>\r\n                        <p class=\"topIndent leftIndent\">Это централизованное место для хранения вашего кода, обычно размещенное на таких сервисах, как GitHub, GitLab, или Bitbucket. Они обеспечивают централизованное хранение кода и являются основой для совместной работы.</p>\r\n                        <p class=\"topIndent leftIndent\">Удаленные репозитории позволяют разработчикам делиться своими изменениями, синхронизировать усилия и вести историю изменений проекта. Также удаленный репозиторий служит точкой интеграции для автоматизации процессов, таких как сборка, тестирование и развертывание приложений.</p>\r\n\r\n                        <p class=\"topIndent\"><b>2. Локальный репозиторий:</b></p>\r\n                        <p class=\"topIndent leftIndent\">Локальный репозиторий — это ваша персональная копия кода, хранящаяся на вашем компьютере. В этом репозитории вы можете выполнять все операции с Git (коммиты, ветвления, слияния) без необходимости подключения к интернету.</p>\r\n                        <p class=\"topIndent leftIndent\">Локальные репозитории позволяют разработчикам работать изолированно от коллег, экспериментировать, создавать новые функции или исправлять ошибки, прежде чем изменения будут объединены (слияние) и отправлены в удаленный репозиторий.</p>\r\n\r\n                        <p class=\"topIndent\"><b>3. Рабочая директория:</b></p>\r\n                        <p class=\"topIndent leftIndent\">Рабочая директория на вашем компьютере содержит актуальные файлы проекта, над которыми вы в данный момент работаете. Это место, где вы можете видеть и изменять файлы, добавлять новый функционал или исправлять ошибки.</p>\r\n                        <p class=\"topIndent leftIndent\">После внесения изменений, вы можете добавлять их в индекс (staging area), а затем фиксировать в локальном репозитории. Рабочая директория связана с текущей веткой в вашем репозитории, и изменение веток изменяет содержимое рабочей директории.</p>\r\n                        <p class=\"topIndent leftIndent\">Эти компоненты совместно обеспечивают мощную инфраструктуру для управления исходным кодом, позволяя разработчикам управлять историей проекта, сотрудничать и разделять ответственность за код.</p>\r\n                    </div>\r\n                    <div id=\"tab-3\" class=\"tabs-content__item\">\r\n                        <table class=\"table-git\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Команда</th>\r\n                                <th>Описание</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>git init</td>\r\n                                <td>Инициализирует новый Git репозиторий в текущей директории.</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>git clone</td>\r\n                                <td>Клонирует репозиторий из URL в новую директорию</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>git add</td>\r\n                                <td>Добавляет файлы в индекс для следующего коммита.</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>git commit</td>\r\n                                <td>Фиксирует подготовленные изменения в репозитории.</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>git push</td>\r\n                                <td>Отправляет изменения из локального репозитория в удаленный.</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>git pull</td>\r\n                                <td>Обновляет текущую ветку с последней версией из удаленного репозитория.</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>git branch</td>\r\n                                <td>Показывает, создает или удаляет ветки.</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>git merge</td>\r\n                                <td>Сливает изменения указанной ветки в текущую ветку.</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>git rebase</td>\r\n                                <td>Переносит изменения на новую базу (чаще всего, это другая ветка).</td>\r\n                            </tr>\r\n                            </tbody>\r\n                            <tfoot>\r\n                            <tr>\r\n                                <td colspan=\"2\">Эти команды представляют основные инструменты работы в Git, позволяя управлять изменениями кода, ветками и слияниями в проектах любого размера. Подробнее мы пройдемся по ним в следующих лекциях.</td>\r\n                            </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                    </div>\r\n                    <div id=\"tab-4\" class=\"tabs-content__item\">\r\n                        <p><b>1.</b> Чтобы настроить имя пользователя и пароль для всех проектов, нужно прописать следующие команды:</p>\r\n                        <div class=\"code\">\r\n                            <code>\r\n                                git config --global user.name \"Your Name\"<br>\r\n                                git config --global user.email \"youremail@example.com\"<br>\r\n                            </code>\r\n                        </div>\r\n\r\n                        <p><b>2.</b> Настроить редактор кода (по умолчанию Git использует Vim.), используя команду:</p>\r\n                        <div class=\"code\">\r\n                            <code>\r\n                                git config --global core.editor \"editor-name\"<br>\r\n                            </code>\r\n                        </div>\r\n                        <p><b>3.</b> Проверить настройки с помощью команды</p>\r\n                        <div class=\"code\">\r\n                            <code>\r\n                                git config --list<br>\r\n                                выход из List (:q)<br>\r\n                            </code>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <!--section stateGit-->\r\n    <section class=\"stateGit\">\r\n        <h2 class=\"section-title\">Работа с Git</h2>\r\n        <!-- состояние в Git -->\r\n        <div class=\"stateGit__wrap\">\r\n            <div class=\"container stateGit__container\">\r\n                <h3 class=\"stateGit__title\">Состояния в Git</h3>\r\n                <p class=\"stateGit__text\">У Гита есть несколько состояний, которые нужно понять и запомнить:</p>\r\n                <ul class=\"stateGit__list\">\r\n                    <li><b>неотслеживаемое</b> (untracked);</li>\r\n                    <li><b>измененное</b> (modified);</li>\r\n                    <li><b>подготовленное</b> (staged);</li>\r\n                    <li><b>закомиченное</b> (committed).</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <!-- End состояние в Git -->\r\n        <div class=\"container\">\r\n            <!--git clone-->\r\n            <h3 class=\"title-chapter\" id=\"clone\">git clone</h3>\r\n            <p>Клонирует репозиторий из URL в новую директорию</p>\r\n            <div class=\"code\">\r\n                <code>\r\n                    git clone \"ссылка на репозиторий\";\r\n                </code>\r\n                <p class=\"code__text\">Создаться проект в папке &gt; {открыть эту папку в редакторе кода}</p>\r\n                <p class=\"code__text\">Находится в состоянии неотслеживаемое (untracked). <br>Любое изменение файла переведет в состояние измененное (modified)</p>\r\n            </div>\r\n            <!--git branch-->\r\n            <h3 class=\"title-chapter\" id=\"branch\">git branch <a href=\"https://git-scm.com/book/ru/v2/%D0%92%D0%B5%D1%82%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-Git-%D0%A3%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%82%D0%BA%D0%B0%D0%BC%D0%B8\" target=\"_blank\">более подробно посмотреть список команд</a> </h3>\r\n            <p>Показывает, создает или удаляет ветки.</p>\r\n            <p>Создается ветка &lt;test&gt; или &lt;develop&gt; из нее кидать в ветку &lt;main&gt;</p>\r\n            <div class=\"code\">\r\n                <code>\r\n                    git branch branch-name<br>\r\n                    git branch -a<br>\r\n                    git branch -v<br>\r\n                    git branch -D unneeded-branch-name<br>\r\n                    git branch --move bad-branch-name corrected-branch-name<br>\r\n                </code>\r\n                <p class=\"code__text\">git branch &lt;название ветки&gt; - создает ветку с названием</p>\r\n                <p class=\"code__text\">git branch -a - показывает названия веток + на какой находишься</p>\r\n                <p class=\"code__text\">git branch -v - посмотреть последний коммит на каждой из веток</p>\r\n                <p class=\"code__text\">git branch -D &lt;Название ветки&gt; - удалить ветку</p>\r\n                <p class=\"code__text\">git branch --move - переименовать ветку</p>\r\n                <p class=\"code__text\">Подсказка (origin/main - ветка которая находится удаленно (origin))</p>\r\n            </div>\r\n            <!--Switch branch-->\r\n            <h3 class=\"title-chapter\" id=\"SwitchBranch\">Switch branch</h3>\r\n            <p>Переключение между ветками.</p>\r\n            <div class=\"code\">\r\n                <code>\r\n                    git checkout branch-name<br>\r\n                    git checkout -<br>\r\n                    git checkout -b branch-name<br>\r\n                </code>\r\n                <p class=\"code__text\">git checkout &lt;branch-name&gt; - перейдет на ветку</p>\r\n                <p class=\"code__text\">git checkout - – перейдет на предыдущую ветку</p>\r\n                <p class=\"code__text\">git checkout -b &lt;branch-name&gt; - создаст и перейдет на ветку</p>\r\n            </div>\r\n            <!--Switch add-->\r\n            <h3 class=\"title-chapter\" id=\"add\">git add</h3>\r\n            <p>Добавляет файлы в индекс для следующего коммита.</p>\r\n            <div class=\"code\">\r\n                <code>\r\n                    git add .<br>\r\n                </code>\r\n                <p class=\"code__text\">переведет в состояние (подготовленное(staged)) все файлы из состояния (измененное (modified)) </p>\r\n            </div>\r\n            <!--git commit-->\r\n            <h3 class=\"title-chapter\" id=\"commit\">git commit</h3>\r\n            <p class=\"topIndent\"><b>Коммит</b> — это основной объект в управлении контроля версий.<p>\r\n            <p class=\"topIndent\">Он содержит все изменения за время этого коммита. Коммиты связаны между собой как односвязный список.</p>\r\n            <p class=\"topIndent\">Добавляя понятные сообщения к каждому коммиту, вы (и другие) легко сможете увидеть, что изменилось и когда.</p>\r\n            <div class=\"code\">\r\n                <code>\r\n                    git commit -m \"feat: First release of Hello World!\"<br>\r\n                </code>\r\n                <p class=\"code__text\"><b>git commit</b> - команда для фиксации изменений.</p>\r\n                <p class=\"code__text\"><b>-m \"message\"</b> - опция для добавления сообщения к коммиту.</p>\r\n                <p class=\"code__text\"><b>feat:</b> создал</p>\r\n                <p class=\"code__text\"><b>fix:</b> исправил</p>\r\n                <p class=\"code__text\">переведет в состояние (закомиченное (committed))</p>\r\n            </div>\r\n            <!--git commit-->\r\n            <h3 class=\"title-chapter\" id=\"mergeBranch\">Merge branches</h3>\r\n            <p>Когда наш срочный фикс готов, мы можем объединить ветки. Сначала нужно переключиться на основную ветку (master)</p>\r\n            <div class=\"code\">\r\n                <code>\r\n                    git merge branch-name<br>\r\n                </code>\r\n                <p class=\"code__text\">Объединяем текущую ветку (master) с веткой &lt;branch-name&gt;</p>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <!-- button top -->\r\n    <button class=\"top-btn\">&uarr;</button>\r\n</main>\r\n\r\n\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/index.html b/index.html
--- a/index.html	(revision 9be311ae7be1d422aa987881c3600b7a60ad97e5)
+++ b/index.html	(date 1730819242204)
@@ -234,6 +234,17 @@
                 </code>
                 <p class="code__text">Объединяем текущую ветку (master) с веткой &lt;branch-name&gt;</p>
             </div>
+
+            <h3 class="title-chapter">Как удалить папку из удаленного репозитория git</h3>
+            <p>Если вы хотите удалить директорию из удаленного репозитория, но оставить её на вашем компьютере (например, вы ошибочно запушили директорию с локальным окружением .venv), то выполните следующие команды</p>
+            <p>Также добавьте имя директории или паттерн для исключения в .gitignore, чтобы в дальнейшем она не добавлялась в индекс</p>
+            <div class="code">
+                <code>
+                    git rm --cached -r &lt;имя_директории&gt;<br>
+                    git commit -m "remove имя_директории from repository"<br>
+                    git push origin main<br>
+                </code>
+            </div>
         </div>
     </section>
     <!-- button top -->
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision 9be311ae7be1d422aa987881c3600b7a60ad97e5)
+++ b/.gitignore	(date 1730818433404)
@@ -1,0 +1,1 @@
+.idea/
\ No newline at end of file
